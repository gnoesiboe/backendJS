/**
 * @returns {Function}
 */
module.exports = function() {

    /**
     * @type {Function}
     */
    var ServiceContainer = require('gn/serviceContainer')();

    return ServiceContainer.extend({

        /**
         * Configures this serviceContainer
         */
        _configure: function() {
            ServiceContainer.prototype._configure.apply(this, arguments);

            var Service = this.get('app.Service');

            this.set('app.Logger', new Service('gn/logger', [ 'app.Inheritance' ]));
            this.set('app.Server', new Service('gn/server', [ 'app.Inheritance', 'app.Logger' ]));
            this.set('app.App', new Service('gn/app', [ 'app.Inheritance', 'app.Router', 'app.Logger', 'app.controller.NotFound' ]));
            this.set('app.Template', new Service('gn/template', [ 'app.Inheritance' ]));
            this.set('app.Command', new Service('gn/command', [ 'app.Inheritance', 'app.Logger' ]));
            this.set('app.Database', new Service('gn/database', [ 'app.Inheritance', 'app.Logger', 'app.Observer' ], [ '127.0.0.1', 'root', 'root', 'node' ]));

            // router
            this.set('gn.Route', new Service('gn/route', [ 'app.Inheritance' ]));
            this.set('gn.route.Literal', new Service('gn/route/literal', [ 'gn.Route' ]));
            this.set('gn.route.Param', new Service('gn/route/param', [ 'gn.Route' ]));
            this.set('gn.Router', new Service('gn/router', [ 'app.Inheritance', 'app.Logger' ]));
            this.set('app.Router', new Service('app/router', [ 'gn.Router', 'gn.route.Literal', 'gn.route.Param', 'app.controller.Home', 'app.controller.PageDetail', 'app.controller.Execute' ]));

            // controllers
            this.set('app.Controller', new Service('gn/controller', [ 'app.Inheritance' ]));
            this.set('app.controller.NotFound', new Service('gn/controller/notFound', [ 'app.Controller' ]));
            this.set('app.controller.Home', new Service('app/controller/home', [ 'app.Controller', 'app.Template' ], [], true));
            this.set('app.controller.Execute', new Service('app/controller/execute', [ 'app.Controller', 'app.Command' ]));
            this.set('app.controller.PageDetail', new Service('app/controller/pageDetail', [ 'app.Controller' ]));
        }
    });
};