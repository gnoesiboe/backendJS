/**
 * @param {Function} Inheritance
 * @param {Function} Observer
 *
 * @returns {Function}
 */
module.exports = function(Inheritance, Observer) {

    /**
     * @type {Object}
     */
    var _ = require('underscore/underscore');

    /**
     * @param {Object} data
     *
     * @constructor
     */
    var DataHolder = function(data) {

        /**
         * @type {Object}
         */
        this._data = null;

        DataHolder.prototype._init.apply(this, arguments);
    };

    _.extend(DataHolder.prototype, new Observer(), {

        /**
         * @param {Object} data
         */
        _init: function(data) {
            this.setData(data || {});
        },

        /**
         * @param {Object} data
         */
        setData: function(data) {
            this._validateData(data);
            this._data = data;
        },

        /**
         * @param {Object} data
         */
        _validateData: function(data) {
            if (_.isObject(data) === false) {
                throw new Error('Data should be of type Object');
            }
        }
    });

    DataHolder.extend = (new Inheritance).extend;

    return DataHolder;
};